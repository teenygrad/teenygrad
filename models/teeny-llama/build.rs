/*
 * Copyright (C) 2025 Teenygrad. All rights reserved.
 *
 * This program is free software: you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the
 * Free Software Foundation, either version 3 of the License, or (at your
 * option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <https://www.gnu.org/licenses/>.
 */

fn main() {
    let extra_libs = "teeny;MLIRAffineTransformOps;MLIRAMDGPUTransforms;MLIRArithValueBoundsOpInterfaceImpl;MLIRArmNeonTransforms;MLIRAsyncTransforms;MLIRBufferizationPipelines;MLIRBufferizationTransformOps;MLIRControlFlowTransforms;MLIRDLTITransformOps;MLIRFuncTransformOps;MLIRGPUTransformOps;MLIRGPUPipelines;MLIRVCIXDialect;MLIRMathTransforms;MLIRMemRefTransformOps;MLIRMLProgramTransforms;MLIRNVGPUTransformOps;MLIRNVGPUTransforms;MLIROpenACCTransforms;MLIRPolynomialDialect;MLIRPtrDialect;MLIRQuantTransforms;MLIRSCFTransformOps;MLIRShapeOpsTransforms;MLIRSparseTensorPipelines;MLIRSparseTensorTransformOps;MLIRLinalgTransformOps;MLIRSparseTensorTransforms;MLIRSparseTensorUtils;MLIRSPIRVModuleCombiner;MLIRSPIRVTransforms;MLIRTensorInferTypeOpInterfaceImpl;MLIRTensorTransformOps;MLIRTransformDebugExtension;MLIRTransformDialectIRDLExtension;MLIRTransformLoopExtension;MLIRTransformPDLExtension;MLIRTransformDialectTransforms;MLIRVectorTransformOps;MLIRTransformDialect;MLIRTransformDialectInterfaces;MLIRTransformDialectUtils;MLIRXeGPUTransforms;MLIRTestDynDialect;MLIRTosaTestPasses;MLIRArithToAMDGPU;MLIRArithToArmSME;MLIRArithToEmitC;MLIRArmNeon2dToIntr;MLIRArmSMEToSCF;MLIRArmSMEToLLVM;MLIRArmSMETransforms;MLIRBufferizationToMemRef;MLIRComplexToLibm;MLIRComplexToLLVM;MLIRComplexToSPIRV;MLIRComplexToStandard;MLIRComplexDivisionConversion;MLIRControlFlowToSCF;MLIRControlFlowToSPIRV;MLIRFuncToEmitC;MLIRGPUToLLVMSPV;MLIRGPUToNVVMTransforms;MLIRGPUToROCDLTransforms;MLIRAMDGPUToROCDL;MLIRAMDGPUUtils;MLIRAMDGPUDialect;MLIRGPUToSPIRV;MLIRIndexToLLVM;MLIRLinalgToStandard;MLIRMathToEmitC;MLIRMathToFuncs;MLIRMathToLibm;MLIRMathToLLVM;MLIRMathToROCDL;MLIRMathToSPIRV;MLIRMemRefToEmitC;MLIRMeshToMPI;MLIRMPIToLLVM;MLIRMPIDialect;MLIRNVGPUToNVVM;MLIRGPUToGPURuntimeTransforms;MLIRAsyncToLLVM;MLIRConvertToLLVMPass;MLIRConvertToLLVMInterface;MLIRNVVMToLLVM;MLIROpenACCToSCF;MLIROpenACCDialect;MLIROpenMPToLLVM;MLIRReconcileUnrealizedCasts;MLIRSCFToControlFlow;MLIRSCFToEmitC;MLIREmitCTransforms;MLIREmitCDialect;MLIRSCFToGPU;MLIRGPUTransforms;MLIRAsyncDialect;MLIRSPIRVTarget;MLIRSPIRVSerialization;MLIRSPIRVBinaryUtils;MLIRNVVMTarget;MLIRNVVMToLLVMIRTranslation;LLVMNVPTXCodeGen;LLVMNVPTXDesc;LLVMNVPTXInfo;MLIRROCDLTarget;MLIRTargetLLVM;MLIRROCDLToLLVMIRTranslation;MLIRROCDLDialect;LLVMAMDGPUAsmParser;LLVMAMDGPUCodeGen;LLVMAsmPrinter;LLVMGlobalISel;LLVMSelectionDAG;LLVMMIRParser;LLVMAMDGPUDesc;LLVMAMDGPUUtils;LLVMAMDGPUInfo;MLIRExecutionEngineUtils;LLVMPasses;LLVMCoroutines;LLVMipo;LLVMVectorize;LLVMSandboxIR;LLVMLinker;LLVMCodeGen;LLVMTarget;LLVMCodeGenTypes;LLVMCGData;LLVMHipStdPar;LLVMIRPrinter;LLVMInstrumentation;LLVMCFGuard;LLVMObjCARCOpts;MLIRAffineToStandard;MLIRSCFToOpenMP;MLIROpenMPDialect;MLIROpenACCMPCommon;MLIRSCFToSPIRV;MLIRIndexToSPIRV;MLIRMemRefToSPIRV;MLIRShapeToStandard;MLIRShapeDialect;MLIRSPIRVToLLVM;MLIRSPIRVUtils;MLIRFuncToLLVM;MLIRArithToLLVM;MLIRControlFlowToLLVM;MLIRMemRefToLLVM;MLIRSPIRVAttrToLLVMConversion;MLIRTensorToLinalg;MLIRLinalgTransforms;MLIRMemRefTransforms;MLIRArithTransforms;MLIRFuncTransforms;MLIRMeshTransforms;MLIRTosaShardingInterfaceImpl;MLIRShardingInterface;MLIRMeshDialect;MLIRSCFTransforms;MLIRBufferizationTransforms;MLIRTensorTransforms;MLIRAffineTransforms;MLIRSCFUtils;MLIRTensorTilingInterfaceImpl;MLIRTilingInterface;MLIRTensorToSPIRV;MLIRArithToSPIRV;MLIRFuncToSPIRV;MLIRTosaToArith;MLIRTosaToLinalg;MLIRIndexDialect;MLIRLinalgUtils;MLIRTosaToMLProgram;MLIRMLProgramDialect;MLIRTosaToSCF;MLIRTosaToTensor;MLIRTensorUtils;MLIRTosaTransforms;MLIRTosaDialect;MLIRQuantUtils;MLIRQuantDialect;MLIRUBToLLVM;MLIRVectorToArmSME;MLIRArmSMEDialect;MLIRVectorToGPU;MLIRNVGPUUtils;MLIRNVGPUDialect;MLIRVectorToLLVMPass;MLIRAMXTransforms;MLIRAMXDialect;MLIRArmNeonDialect;MLIRArmSVETransforms;MLIRArmSVEDialect;MLIRX86VectorTransforms;MLIRX86VectorDialect;MLIRVectorToLLVM;MLIRArithAttrToLLVMConversion;MLIRLLVMCommonConversion;MLIRTargetLLVMIRExport;MLIRLLVMIRTransforms;MLIRNVVMDialect;MLIRLLVMDialect;LLVMBitWriter;MLIRTranslateLib;LLVMFrontendOpenMP;LLVMFrontendOffloading;LLVMObjectYAML;LLVMScalarOpts;LLVMAggressiveInstCombine;LLVMInstCombine;LLVMTransformUtils;LLVMFrontendAtomic;LLVMAnalysis;LLVMProfileData;LLVMSymbolize;LLVMDebugInfoPDB;LLVMDebugInfoCodeView;LLVMDebugInfoMSF;LLVMDebugInfoBTF;LLVMDebugInfoDWARF;LLVMObject;LLVMMCParser;LLVMMC;LLVMIRReader;LLVMAsmParser;LLVMBitReader;LLVMTextAPI;MLIRVectorToSCF;MLIRVectorToSPIRV;MLIRUBToSPIRV;MLIRSPIRVConversion;MLIRSPIRVDialect;MLIRVectorTransforms;MLIRAffineUtils;MLIRGPUUtils;MLIRGPUDialect;MLIRDLTIDialect;MLIRLinalgDialect;MLIRBufferizationDialect;MLIRMathDialect;MLIRSparseTensorDialect;MLIRMemRefUtils;MLIRVectorUtils;MLIRAffineAnalysis;MLIRSCFDialect;MLIRControlFlowDialect;MLIRFuncDialect;LLVMCore;LLVMBinaryFormat;LLVMTargetParser;LLVMRemarks;LLVMBitstreamReader;MLIRVectorToXeGPU;MLIRXeGPUDialect;MLIRVectorDialect;MLIRTensorDialect;MLIRAffineDialect;MLIRMemRefDialect;MLIRArithUtils;MLIRComplexDialect;MLIRArithDialect;MLIRCastInterfaces;MLIRInferIntRangeCommon;MLIRShapedOpInterfaces;MLIRParallelCombiningOpInterface;MLIRVectorInterfaces;MLIRMaskableOpInterface;MLIRMaskingOpInterface;MLIRDialectUtils;triton;TritonTestDialectTritonGPU;MLIROptLib;MLIRIRDL;MLIRDialect;MLIRParser;MLIRBytecodeReader;MLIRAsmParser;MLIRBytecodeWriter;MLIRBytecodeOpInterface;MLIRDebug;MLIRObservers;MLIRPluginsLib;MLIRTransforms;MLIRUBDialect;MLIRTransformUtils;MLIRSubsetOpInterface;MLIRValueBoundsOpInterface;MLIRDestinationStyleOpInterface;MLIRRewrite;MLIRRewritePDL;MLIRPDLToPDLInterp;MLIRPDLInterpDialect;MLIRPDLDialect;MLIRPass;MLIRAnalysis;MLIRControlFlowInterfaces;MLIRPresburger;MLIRLoopLikeInterface;MLIRViewLikeInterface;MLIRInferIntRangeInterface;MLIRDataLayoutInterfaces;MLIRInferTypeOpInterface;MLIRSideEffectInterfaces;MLIRFunctionInterfaces;MLIRCallInterfaces;MLIRMemorySlotInterfaces;MLIRRuntimeVerifiableOpInterface;MLIRIR;MLIRSupport;LLVMSupport;LLVMDemangle;stdc++;m;z";

    let link_libs = extra_libs
        .split(";")
        .map(|s| s.to_string())
        .collect::<Vec<String>>();

    println!("cargo::rustc-link-arg=-Wl,--start-group");

    for lib in link_libs {
        println!("cargo::rustc-link-arg=-l{lib}");
    }

    println!("cargo::rustc-link-arg=-Wl,--end-group");
}
