/*
 * Copyright (c) 2025 Teenygrad. All rights reserved.
 *
 * This program is free software: you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the
 * Free Software Foundation, either version 3 of the License, or (at your
 * option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <https://www.gnu.org/licenses/>.
 */
 
namespace FXGraph;

enum OpType : byte {
  placeholder, 
  get_attr, 
  call_function, 
  call_method, 
  call_module, 
  output
}

table Node {
  name: string;
  op: OpType;
  target: string;
  args: [string];  // Serialized argument representations
  kwargs: [KeyValue];
  users: [string];  // Consumer node names
}

table KeyValue {
  key: string;
  value: string;
}

enum DType : byte {
  FLOAT32 = 0,
  FLOAT64 = 1,
  INT32 = 2,
  INT64 = 3,
  UINT8 = 4,
  INT8 = 5,
  BOOL = 6,
  BFLOAT16 = 7,
  FLOAT16 = 8
}

table Shape {
  dims: [uint];
}

table Tensor {
  dtype: DType;
  device: string;
  shape: Shape;
  data: [ubyte];
  requires_grad: bool = false;
  stride: [long];
  storage_offset: long = 0;
}

table SymInt {
  id: string;
}

enum InputType : byte {
  SymInt = 0,
  Tensor = 1
}

union InputValue {
  symint: SymInt,
  tensor: Tensor
}

table ExampleInput {
  type: InputType;
  value: InputValue;
}

table ExampleInputs {
  inputs: [ExampleInput];
  kwargs: [KeyValue];  // For keyword arguments
}

table Graph {
  nodes: [Node];
  input_names: [string];  // Placeholder names
  output_names: [string]; // Output node names
  example_inputs: ExampleInputs;
}

root_type Graph;